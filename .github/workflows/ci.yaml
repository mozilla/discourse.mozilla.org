name: CI Build Check

on:
  push:
    branches:
      - '**'
      - '!master'
  pull_request_target: {}

jobs:
  prepare-dev:
    runs-on: ubuntu-latest
    outputs:
      ENV: ${{ steps.tag.outputs.env }}
      TAG: ${{ steps.tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Tag
        id: tag
        run: |
          export CI_COMMIT_SHORT_SHA=$(git describe --abbrev=7 --always --tags)
          echo "::set-output name=tag::$CI_COMMIT_SHORT_SHA"
          echo "Commit for this pipeline: ";
          echo $CI_COMMIT_SHORT_SHA;
          export ENV="dev"
          echo "::set-output name=env::$ENV"
          echo "Environment for this pipeline: ";
          echo $ENV

  build-image-dev:
    runs-on: ubuntu-latest
    needs: prepare-dev
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: discourse
          POSTGRES_PASSWORD: discourse
          POSTGRES_PORT: 5432
          POSTGRES_USER: discourse
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Pre-build Image
        id: prebuild
        env:
          ENV: ${{ needs.prepare-dev.outputs.ENV }}
          TAG: ${{ needs.prepare-dev.outputs.TAG }}
        run: |
          export GHA_NETWORK=$(docker network ls --filter driver=bridge --filter name=github_network_ --format '{{.Name}}')
          git clone -q https://github.com/discourse/discourse_docker.git
          cd discourse_docker
          mkdir -p includes && mkdir -p containers
          cp ../discourse-$ENV.yml containers/app.yml
          cp ../includes/* includes/
          sed -i "s,environment,$ENV," includes/after_build.yml
          sed -i "s,code-revision,tests-passed," containers/app.yml
          sed -i "s,gha_bridge_network,$GHA_NETWORK," containers/app.yml
          ./launcher bootstrap app
