name: CI Build & Bootstrap Image Check

on:
  push:
    branches:
      - '**'
      - '!master'

jobs:
  build-bootstrap-image:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: discourse
          POSTGRES_PORT: 5432
          POSTGRES_USER: discourse

        ports:
          - 5432:5432

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        env:
          - dev
          - stage
          - prod

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Database per CI Environment
        id: env_databases_setup
        run: |
          set -e
          set -u
          echo "Creating user and database 'discourse-${{ matrix.env }}'"
          psql -v ON_ERROR_STOP=1 "postgresql://discourse:discourse@localhost:5432" <<-EOSQL
              CREATE DATABASE "discourse-${{ matrix.env }}";
              GRANT ALL PRIVILEGES ON DATABASE "discourse-${{ matrix.env }}" TO discourse;
          EOSQL

      - name: Pre-build Image
        id: prebuild
        run: |
          export GHA_NETWORK=$(docker network ls --filter driver=bridge --filter name=github_network_ --format '{{.Name}}')

          git clone https://github.com/discourse/discourse_docker.git && cd discourse_docker
          mkdir -p containers includes

          cp ../discourse-${{ matrix.env }}.yml containers/app.yml
          cp ../includes/* includes/

          sed -i "s,environment,${{ matrix.env }}," includes/after_build.yml
          sed -i "s,gha_bridge_network,$GHA_NETWORK," containers/app.yml

          ./launcher bootstrap app
