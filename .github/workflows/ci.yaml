name: CI Build & Bootstrap Image Check

on:
  push:
    branches:
      - '**'
      - '!master'
  pull_request_target: {}

jobs:
  build-bootstrap-image:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: discourse
          POSTGRES_PASSWORD: discourse
          POSTGRES_PORT: 5432
          POSTGRES_USER: discourse
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        env: ['dev', 'stage', 'prod']

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Pre-build Image
        id: prebuild
        run: |
          export GHA_NETWORK=$(docker network ls --filter driver=bridge --filter name=github_network_ --format '{{.Name}}')
          git clone -q https://github.com/discourse/discourse_docker.git
          cd discourse_docker
          mkdir -p includes && mkdir -p containers
          cp ../discourse-${{ matrix.env }}.yml containers/app.yml
          cp ../includes/* includes/
          sed -i "s,environment,${{ matrix.env }}," includes/after_build.yml
          sed -i "s,gha_bridge_network,$GHA_NETWORK," containers/app.yml
          ./launcher bootstrap app
